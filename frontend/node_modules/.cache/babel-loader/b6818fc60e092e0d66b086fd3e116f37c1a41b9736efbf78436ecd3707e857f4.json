{"ast":null,"code":"var _jsxFileName = \"/home/joke/Videos/ecommerce/frontend/src/components/Paginate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Paginate({\n  pages,\n  keyword = '',\n  isAdmin = false\n}) {\n  _s();\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    // Parse the URL query parameters and update the page state\n    const queryParams = new URLSearchParams(window.location.search);\n    const pageParam = queryParams.get('page');\n    if (pageParam && !isNaN(pageParam)) {\n      setPage(parseInt(pageParam));\n    }\n  }, []);\n\n  // Function to update the URL query parameters when the page changes\n  const updatePageQueryParam = newPage => {\n    const queryParams = new URLSearchParams(window.location.search);\n    queryParams.set('page', newPage);\n    if (keyword) {\n      queryParams.set('keyword', keyword);\n    }\n    window.history.replaceState({}, '', `?${queryParams.toString()}`);\n  };\n  return pages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [...Array(pages).keys()].map(x => /*#__PURE__*/_jsxDEV(LinkContainer, {\n      to: isAdmin ? `/admin/productlist/` : '/',\n      onClick: () => {\n        setPage(x + 1);\n        updatePageQueryParam(x + 1);\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: x + 1 === page,\n        children: x + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)\n    }, x + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n}\n_s(Paginate, \"LMxNfAY58b6loOOsHmH6zd80VGE=\");\n_c = Paginate;\nexport default Paginate;\nvar _c;\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","LinkContainer","jsxDEV","_jsxDEV","Paginate","pages","keyword","isAdmin","_s","page","setPage","queryParams","URLSearchParams","window","location","search","pageParam","get","isNaN","parseInt","updatePageQueryParam","newPage","set","history","replaceState","toString","children","Array","keys","map","x","to","onClick","Item","active","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/joke/Videos/ecommerce/frontend/src/components/Paginate.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nfunction Paginate({ pages, keyword = '', isAdmin = false }) {\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        // Parse the URL query parameters and update the page state\n        const queryParams = new URLSearchParams(window.location.search);\n        const pageParam = queryParams.get('page');\n        if (pageParam && !isNaN(pageParam)) {\n            setPage(parseInt(pageParam));\n        }\n    }, []);\n\n    // Function to update the URL query parameters when the page changes\n    const updatePageQueryParam = (newPage) => {\n        const queryParams = new URLSearchParams(window.location.search);\n        queryParams.set('page', newPage);\n        if (keyword) {\n            queryParams.set('keyword', keyword);\n        }\n        window.history.replaceState({}, '', `?${queryParams.toString()}`);\n    };\n\n    return (\n        pages > 1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((x) => (\n                    <LinkContainer\n                        key={x + 1}\n                        to={isAdmin ? `/admin/productlist/` : '/'}\n                        onClick={() => {\n                            setPage(x + 1);\n                            updatePageQueryParam(x + 1);\n                        }}\n                    >\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    );\n}\n\nexport default Paginate;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,OAAO,GAAG,EAAE;EAAEC,OAAO,GAAG;AAAM,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,WAAW,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC/D,MAAMC,SAAS,GAAGL,WAAW,CAACM,GAAG,CAAC,MAAM,CAAC;IACzC,IAAID,SAAS,IAAI,CAACE,KAAK,CAACF,SAAS,CAAC,EAAE;MAChCN,OAAO,CAACS,QAAQ,CAACH,SAAS,CAAC,CAAC;IAChC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,oBAAoB,GAAIC,OAAO,IAAK;IACtC,MAAMV,WAAW,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC/DJ,WAAW,CAACW,GAAG,CAAC,MAAM,EAAED,OAAO,CAAC;IAChC,IAAIf,OAAO,EAAE;MACTK,WAAW,CAACW,GAAG,CAAC,SAAS,EAAEhB,OAAO,CAAC;IACvC;IACAO,MAAM,CAACU,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,EAAG,IAAGb,WAAW,CAACc,QAAQ,CAAC,CAAE,EAAC,CAAC;EACrE,CAAC;EAED,OACIpB,KAAK,GAAG,CAAC,iBACLF,OAAA,CAACH,UAAU;IAAA0B,QAAA,EACN,CAAC,GAAGC,KAAK,CAACtB,KAAK,CAAC,CAACuB,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,CAAC,iBAC5B3B,OAAA,CAACF,aAAa;MAEV8B,EAAE,EAAExB,OAAO,GAAI,qBAAoB,GAAG,GAAI;MAC1CyB,OAAO,EAAEA,CAAA,KAAM;QACXtB,OAAO,CAACoB,CAAC,GAAG,CAAC,CAAC;QACdV,oBAAoB,CAACU,CAAC,GAAG,CAAC,CAAC;MAC/B,CAAE;MAAAJ,QAAA,eAEFvB,OAAA,CAACH,UAAU,CAACiC,IAAI;QAACC,MAAM,EAAEJ,CAAC,GAAG,CAAC,KAAKrB,IAAK;QAAAiB,QAAA,EAAEI,CAAC,GAAG;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB;IAAC,GAP7DR,CAAC,GAAG,CAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQC,CAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CACf;AAET;AAAC9B,EAAA,CAxCQJ,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}